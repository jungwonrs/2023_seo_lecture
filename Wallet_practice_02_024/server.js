var express = require('express');
var app = express();

var bodyParser = require('body-parser');
var Web3 = require('web3');
var ethTx = require('ethereumjs-tx');

var web3 = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:8888'));

const address = '3f9511cE0De5A970210784D3dcd635302a74aFcC';
const priv_key =  Buffer.from('8dfe05d73c2568b4db0503ad48feb0968ec85fcd984547d0901ee27335760800', 'hex');

app.use(bodyParser.json())
app.use(bodyParser.urlencoded({extended:true}));

var ABI = [
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "name_",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "symbol_",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "mint_",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			}
		],
		"name": "allowance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "decimals",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "subtractedValue",
				"type": "uint256"
			}
		],
		"name": "decreaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "addedValue",
				"type": "uint256"
			}
		],
		"name": "increaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]


app.get('/deploy', function(req, res){
  res.sendFile(__dirname+"/deploy.html")
})

app.post('/deploy', function(req, res){
  var name_ = req.body.tn;
  var symbol_ = req.body.ts;
  var mint_ =  req.body.supply;

  var erc20Contract = new web3.eth.Contract([{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"mint_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]);
  var erc20 = erc20Contract.deploy({
       data: '0x60806040523480156200001157600080fd5b5060405162001bd138038062001bd18339818101604052810190620000379190620003c6565b8260039081620000489190620006a1565b5081600490816200005a9190620006a1565b506200006d33826200007660201b60201c565b505050620008a3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000df90620007e9565b60405180910390fd5b620000fc60008383620001ee60201b60201c565b80600260008282546200011091906200083a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016791906200083a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001ce919062000886565b60405180910390a3620001ea60008383620001f360201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002618262000216565b810181811067ffffffffffffffff8211171562000283576200028262000227565b5b80604052505050565b600062000298620001f8565b9050620002a6828262000256565b919050565b600067ffffffffffffffff821115620002c957620002c862000227565b5b620002d48262000216565b9050602081019050919050565b60005b8381101562000301578082015181840152602081019050620002e4565b60008484015250505050565b6000620003246200031e84620002ab565b6200028c565b90508281526020810184848401111562000343576200034262000211565b5b62000350848285620002e1565b509392505050565b600082601f83011262000370576200036f6200020c565b5b8151620003828482602086016200030d565b91505092915050565b6000819050919050565b620003a0816200038b565b8114620003ac57600080fd5b50565b600081519050620003c08162000395565b92915050565b600080600060608486031215620003e257620003e162000202565b5b600084015167ffffffffffffffff81111562000403576200040262000207565b5b620004118682870162000358565b935050602084015167ffffffffffffffff81111562000435576200043462000207565b5b620004438682870162000358565b92505060406200045686828701620003af565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004b357607f821691505b602082108103620004c957620004c86200046b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004f4565b6200053f8683620004f4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005826200057c62000576846200038b565b62000557565b6200038b565b9050919050565b6000819050919050565b6200059e8362000561565b620005b6620005ad8262000589565b84845462000501565b825550505050565b600090565b620005cd620005be565b620005da81848462000593565b505050565b5b818110156200060257620005f6600082620005c3565b600181019050620005e0565b5050565b601f82111562000651576200061b81620004cf565b6200062684620004e4565b8101602085101562000636578190505b6200064e6200064585620004e4565b830182620005df565b50505b505050565b600082821c905092915050565b6000620006766000198460080262000656565b1980831691505092915050565b600062000691838362000663565b9150826002028217905092915050565b620006ac8262000460565b67ffffffffffffffff811115620006c857620006c762000227565b5b620006d482546200049a565b620006e182828562000606565b600060209050601f83116001811462000719576000841562000704578287015190505b62000710858262000683565b86555062000780565b601f1984166200072986620004cf565b60005b8281101562000753578489015182556001820191506020850194506020810190506200072c565b868310156200077357848901516200076f601f89168262000663565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620007d1601f8362000788565b9150620007de8262000799565b602082019050919050565b600060208201905081810360008301526200080481620007c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000847826200038b565b915062000854836200038b565b92508282019050808211156200086f576200086e6200080b565b5b92915050565b62000880816200038b565b82525050565b60006020820190506200089d600083018462000875565b92915050565b61131e80620008b36000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610bfb565b60405180910390f35b6100e660048036038101906100e19190610cb6565b610308565b6040516100f39190610d11565b60405180910390f35b61010461032b565b6040516101119190610d3b565b60405180910390f35b610134600480360381019061012f9190610d56565b610335565b6040516101419190610d11565b60405180910390f35b610152610364565b60405161015f9190610dc5565b60405180910390f35b610182600480360381019061017d9190610cb6565b61036d565b60405161018f9190610d11565b60405180910390f35b6101b260048036038101906101ad9190610de0565b610417565b6040516101bf9190610d3b565b60405180910390f35b6101d061045f565b6040516101dd9190610bfb565b60405180910390f35b61020060048036038101906101fb9190610cb6565b6104f1565b60405161020d9190610d11565b60405180910390f35b610230600480360381019061022b9190610cb6565b6105db565b60405161023d9190610d11565b60405180910390f35b610260600480360381019061025b9190610e0d565b6105fe565b60405161026d9190610d3b565b60405180910390f35b60606003805461028590610e7c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610e7c565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600080610313610685565b905061032081858561068d565b600191505092915050565b6000600254905090565b600080610340610685565b905061034d858285610856565b6103588585856108e2565b60019150509392505050565b60006001905090565b600080610378610685565b905061040c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104079190610edc565b61068d565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046e90610e7c565b80601f016020809104026020016040519081016040528092919081815260200182805461049a90610e7c565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b6000806104fc610685565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610f82565b60405180910390fd5b6105cf828686840361068d565b60019250505092915050565b6000806105e6610685565b90506105f38185856108e2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390611014565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361076b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610762906110a6565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108499190610d3b565b60405180910390a3505050565b600061086284846105fe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108dc57818110156108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590611112565b60405180910390fd5b6108db848484840361068d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610951576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610948906111a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790611236565b60405180910390fd5b6109cb838383610b61565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a48906112c8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ae49190610edc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b489190610d3b565b60405180910390a3610b5b848484610b66565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ba5578082015181840152602081019050610b8a565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bcd82610b6b565b610bd78185610b76565b9350610be7818560208601610b87565b610bf081610bb1565b840191505092915050565b60006020820190508181036000830152610c158184610bc2565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4d82610c22565b9050919050565b610c5d81610c42565b8114610c6857600080fd5b50565b600081359050610c7a81610c54565b92915050565b6000819050919050565b610c9381610c80565b8114610c9e57600080fd5b50565b600081359050610cb081610c8a565b92915050565b60008060408385031215610ccd57610ccc610c1d565b5b6000610cdb85828601610c6b565b9250506020610cec85828601610ca1565b9150509250929050565b60008115159050919050565b610d0b81610cf6565b82525050565b6000602082019050610d266000830184610d02565b92915050565b610d3581610c80565b82525050565b6000602082019050610d506000830184610d2c565b92915050565b600080600060608486031215610d6f57610d6e610c1d565b5b6000610d7d86828701610c6b565b9350506020610d8e86828701610c6b565b9250506040610d9f86828701610ca1565b9150509250925092565b600060ff82169050919050565b610dbf81610da9565b82525050565b6000602082019050610dda6000830184610db6565b92915050565b600060208284031215610df657610df5610c1d565b5b6000610e0484828501610c6b565b91505092915050565b60008060408385031215610e2457610e23610c1d565b5b6000610e3285828601610c6b565b9250506020610e4385828601610c6b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e9457607f821691505b602082108103610ea757610ea6610e4d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ee782610c80565b9150610ef283610c80565b9250828201905080821115610f0a57610f09610ead565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610f6c602583610b76565b9150610f7782610f10565b604082019050919050565b60006020820190508181036000830152610f9b81610f5f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610ffe602483610b76565b915061100982610fa2565b604082019050919050565b6000602082019050818103600083015261102d81610ff1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611090602283610b76565b915061109b82611034565b604082019050919050565b600060208201905081810360008301526110bf81611083565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006110fc601d83610b76565b9150611107826110c6565b602082019050919050565b6000602082019050818103600083015261112b816110ef565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061118e602583610b76565b915061119982611132565b604082019050919050565b600060208201905081810360008301526111bd81611181565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611220602383610b76565b915061122b826111c4565b604082019050919050565b6000602082019050818103600083015261124f81611213565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006112b2602683610b76565b91506112bd82611256565b604082019050919050565b600060208201905081810360008301526112e1816112a5565b905091905056fea2646970667358221220a25a7237041955481f8d932ab1c2f1fdd908d8ee69573bb3e020e8ead11f339164736f6c63430008110033',
       arguments: [
            name_,
            symbol_,
            mint_,
       ]
  })

  var set_string_byte_code = erc20.encodeABI();

  web3.eth.getTransactionCount(address, "pending", (err, nonce) =>{
    var Raw_Tx = {
      nonce: web3.utils.toHex(nonce),
      gasPrice: web3.utils.toHex(1000),
      gasLimit: web3.utils.toHex(3000000),
      data: set_string_byte_code,
      from: address
    };

  var Signature = new Buffer.from(priv_key, "hex");
  var Make_Tx = new ethTx(Raw_Tx);
  Make_Tx.sign(Signature);

  var Serialized_Tx = Make_Tx.serialize();
  var Raw_Tx_Hex = "0x" + Serialized_Tx.toString('hex');

  web3.eth.sendSignedTransaction(Raw_Tx_Hex).on('receipt', receipt =>{
    console.log('receipt', receipt)
  })
  })
})


app.post('/send', function(req, res){
  var contract_address = "0x26daf57EF9f0c4d15135E2D311896A0C2859F042"
  var contract = new web3.eth.Contract(ABI, contract_address);

  var set_contract = contract.methods.transfer(req.body.address, req.body.value);

  var set_contract_byte = set_contract.encodeABI();

  web3.eth.getTransactionCount(address, "pending", (err, nonce) =>{
    var Raw_Tx ={
      nonce: web3.utils.toHex(nonce),
      gasPrice: web3.utils.toHex(1000),
      gasLimit: web3.utils.toHex(3000000),
      data: set_contract_byte,
      from: address,
      to: contract_address
    };

    var Signature = new Buffer.from(priv_key, "hex");
    var Make_Tx = new ethTx(Raw_Tx);
    Make_Tx.sign(Signature);

    var Serialized_Tx = Make_Tx.serialize();
    var Raw_Tx_Hex = "0x" + Serialized_Tx.toString('hex');

    web3.eth.sendSignedTransaction(Raw_Tx_Hex).on('receipt', receipt =>{
      console.log('receipt', receipt)
    })
  })
})


app.get('/send', function(req, res){
  res.sendFile(__dirname+"/send.html")
})

app.post('/balance', function(req, res){
  var contract_address = "0x26daf57EF9f0c4d15135E2D311896A0C2859F042"
  var contract = new web3.eth.Contract(ABI, contract_address);

  contract.methods.balanceOf(req.body.address).call().then(data =>{
    res.send("balance= "+ data);
  })
})

app.get('/balance', function(req, res){
  res.sendFile(__dirname+"/balance.html")
})

var server = app.listen(2023, function(){
  console.log("server is working now")
})

app.get('/', function(req, res){
  res.send('hello world. this is practice for wallet applications')
})
